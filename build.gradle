buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "http://repo.spring.io/release" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/snapshot" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: "groovy"
apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "spring-boot"

ext.groovyVersion   = "2.4.6"
ext.gebVersion      = "0.13.1"
ext.seleniumVersion = "2.53.0"
ext.spockVersion 	= "1.0-groovy-2.4"

ext.drivers = ["chrome", "firefox", "ie", "phantomJs" ]

repositories {
	mavenCentral()
	maven { url "http://dl.bintray.com/tux2323/utils/" }
}

dependencies {
	// Groovy
    compile("org.codehaus.groovy:groovy-all:$groovyVersion")

    // Spring Framework Dependencies
	compile("org.springframework.boot:spring-boot-starter")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-hateoas")
	testCompile("org.springframework.boot:spring-boot-starter-test")
	
    // HSQL DB
    runtime "org.hsqldb:hsqldb"

    // Selenium Drivers
    testCompile("org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion")
	testCompile("org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion")
	testCompile("org.seleniumhq.selenium:selenium-ie-driver:$seleniumVersion")
	testCompile("com.codeborne:phantomjsdriver:1.3.0")

	// Spock Test Framework
	testCompile("org.spockframework:spock-core:$spockVersion")
	testCompile("org.spockframework:spock-spring:$spockVersion")
	
	// Geb
    testCompile("org.gebish:geb-spock:$gebVersion")
    testCompile("com.seitenbau.utils:gebbind:0.1.0")
	
	// WebDriver Manager for downloading native browser drivers
	testCompile("io.github.bonigarcia:webdrivermanager:1.4.8")
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}

task console(dependsOn: 'classes', type: JavaExec) {
    main = 'groovy.ui.Console'
    classpath = sourceSets.test.runtimeClasspath
    args = ["$projectDir/src/test/script/script.groovy"]
}

drivers.each { driver ->
	task "${driver}Test"(type: Test, group: 'verification', description: "Runs the webdriver tests in the $driver browser") {
		reports {
			html.destination = reporting.file("$name/tests")
			junitXml.destination = file("$buildDir/test-results/$name")
		}
		outputs.upToDateWhen { false }  // Always run tests
		systemProperty "geb.build.reportsDir", reporting.file("$name/geb")
		systemProperty "geb.env", driver
	}
}
